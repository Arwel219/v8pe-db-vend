{"version":3,"sources":["../src/lib/nitro.ts"],"names":[],"mappings":";;;AAIA,IAAM,aAAgB,GAAA,CAAC,CAAC,GAAA,EAAK,KAAK,CAG5B,KAAA;AAAA,EACJ,IAAI,WAAY,EAAA;AAAA,EAChB,KAAA,CAAM,QAAQ,KAAK,CAAA,GAAI,MAAM,IAAK,CAAA,IAAI,CAAI,GAAA,MAAA,CAAO,KAAK;AACxD,CAAA;AACA,eAAsB,gBAAA,CACpB,OACA,IACA,EAAA;AACA,EAAM,MAAA,EAAE,QAAS,EAAA,GAAI,IAAK,CAAA,GAAA;AAC1B,EAAM,MAAA,GAAA,GAAM,cAAc,KAAK,CAAA;AAC/B,EAAM,MAAA,UAAA,GAAa,KAAM,CAAA,IAAA,CAAK,GAAI,CAAA,OAAA;AAClC,EAAA,MAAM,OAAuB,GAAA,UAAA,GACzB,MAAO,CAAA,WAAA,CAAY,MAAO,CAAA,OAAA,CAAQ,UAAU,CAAA,CAAE,GAAI,CAAA,aAAa,CAAC,CAAA,GAChE,EAAC;AACL,EAAA,MAAM,MAAS,GAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,MAAU,IAAA,KAAA;AACxC,EAAM,MAAA,IAAA,GACJ,WAAW,KAAS,IAAA,MAAA,KAAW,SAAS,MAAM,WAAA,CAAY,KAAK,CAAI,GAAA,IAAA;AAErE,EAAM,MAAA,OAAA,GAAU,IAAI,OAAA,CAAQ,GAAK,EAAA;AAAA,IAC/B,MAAA;AAAA,IACA,OAAA;AAAA,IACA,IAAM,EAAA,IAAA,GAAO,IAAK,CAAA,SAAA,CAAU,IAAI,CAAI,GAAA;AAAA,GACrC,CAAA;AACD,EAAA,QAAQ,QAAQ,MAAQ;AAAA,IACtB,KAAK,KAAA;AACH,MAAO,OAAA,QAAA,CAAS,IAAI,OAAO,CAAA;AAAA,IAC7B,KAAK,MAAA;AACH,MAAO,OAAA,QAAA,CAAS,KAAK,OAAO,CAAA;AAAA,IAC9B,KAAK,KAAA;AACH,MAAO,OAAA,QAAA,CAAS,IAAI,OAAO,CAAA;AAAA,IAC7B,KAAK,QAAA;AACH,MAAO,OAAA,QAAA,CAAS,OAAO,OAAO,CAAA;AAAA;AAEpC","file":"nitro.mjs","sourcesContent":["import { EventHandlerRequest, getRequestURL, H3Event, readRawBody } from 'h3';\n\nimport { Server } from '../Server';\n\nconst convertHeader = ([key, value]: [\n  string,\n  string | string[] | undefined\n]) => [\n  key.toLowerCase(),\n  Array.isArray(value) ? value.join(', ') : String(value),\n];\nexport async function convertToRequest(\n  event: H3Event<EventHandlerRequest>,\n  nile: Server\n) {\n  const { handlers } = nile.api;\n  const url = getRequestURL(event);\n  const reqHeaders = event.node.req.headers;\n  const headers: HeadersInit = reqHeaders\n    ? Object.fromEntries(Object.entries(reqHeaders).map(convertHeader))\n    : {};\n  const method = event.node.req.method || 'GET';\n  const body =\n    method !== 'GET' && method !== 'HEAD' ? await readRawBody(event) : null;\n\n  const request = new Request(url, {\n    method,\n    headers,\n    body: body ? JSON.stringify(body) : null,\n  });\n  switch (request.method) {\n    case 'GET':\n      return handlers.GET(request);\n    case 'POST':\n      return handlers.POST(request);\n    case 'PUT':\n      return handlers.PUT(request);\n    case 'DELETE':\n      return handlers.DELETE(request);\n  }\n}\n"]}