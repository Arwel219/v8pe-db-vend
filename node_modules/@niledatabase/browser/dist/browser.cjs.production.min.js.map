{"version":3,"file":"browser.cjs.production.min.js","sources":["../src/openapi/src/models/APIError.ts","../src/openapi/src/models/AssociateUserRequest.ts","../src/openapi/src/runtime.ts","../src/openapi/src/models/CreateBasicUserRequest.ts","../src/openapi/src/models/CreateTenantRequest.ts","../src/openapi/src/models/Tenant.ts","../src/openapi/src/models/TenantUser.ts","../src/openapi/src/models/UpdateUserRequest.ts","../src/openapi/src/models/User.ts","../src/openapi/src/apis/AuthenticationApi.ts","../src/openapi/src/apis/DefaultApi.ts","../src/openapi/src/apis/TenantsApi.ts","../src/openapi/src/apis/UsersApi.ts","../src/index.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface APIError\n */\nexport interface APIError {\n    /**\n     * \n     * @type {string}\n     * @memberof APIError\n     */\n    errorCode: APIErrorErrorCodeEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof APIError\n     */\n    message: string;\n    /**\n     * \n     * @type {number}\n     * @memberof APIError\n     */\n    statusCode: number;\n}\n\n\n/**\n * @export\n */\nexport const APIErrorErrorCodeEnum = {\n    InternalError: 'internal_error',\n    BadRequest: 'bad_request',\n    UnsupportedOperation: 'unsupported_operation',\n    EntityNotFound: 'entity_not_found',\n    DuplicateEntity: 'duplicate_entity',\n    InvalidCredentials: 'invalid_credentials',\n    UnknownOidcProvider: 'unknown_oidc_provider',\n    UnknownOidcParty: 'unknown_oidc_party',\n    ProviderAlreadyExists: 'provider_already_exists',\n    ProviderConfigError: 'provider_config_error',\n    ProviderMismatch: 'provider_mismatch',\n    ProviderUpdateError: 'provider_update_error',\n    ProviderDisabled: 'provider_disabled',\n    SessionStateMissing: 'session_state_missing',\n    SessionStateMismatch: 'session_state_mismatch',\n    OidcCodeMissing: 'oidc_code_missing',\n    TenantNotFound: 'tenant_not_found',\n    ConstraintViolation: 'constraint_violation',\n    SqlException: 'sql_exception',\n    DbCreationFailure: 'db_creation_failure',\n    DbStatusFailure: 'db_status_failure',\n    DbInitializationFailure: 'db_initialization_failure',\n    DbConfigMissing: 'db_config_missing',\n    UnauthorizedWorkspaceAccess: 'unauthorized_workspace_access',\n    EmailSendFailure: 'email_send_failure',\n    JdbcException: 'jdbc_exception',\n    OidcException: 'oidc_exception',\n    RegionMismatch: 'region_mismatch',\n    CredentialCreationFailure: 'credential_creation_failure',\n    CredentialPropagationFailure: 'credential_propagation_failure'\n} as const;\nexport type APIErrorErrorCodeEnum = typeof APIErrorErrorCodeEnum[keyof typeof APIErrorErrorCodeEnum];\n\n\n/**\n * Check if a given object implements the APIError interface.\n */\nexport function instanceOfAPIError(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"errorCode\" in value;\n    isInstance = isInstance && \"message\" in value;\n    isInstance = isInstance && \"statusCode\" in value;\n\n    return isInstance;\n}\n\nexport function APIErrorFromJSON(json: any): APIError {\n    return APIErrorFromJSONTyped(json, false);\n}\n\nexport function APIErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIError {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'errorCode': json['errorCode'],\n        'message': json['message'],\n        'statusCode': json['statusCode'],\n    };\n}\n\nexport function APIErrorToJSON(value?: APIError | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'errorCode': value.errorCode,\n        'message': value.message,\n        'statusCode': value.statusCode,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AssociateUserRequest\n */\nexport interface AssociateUserRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof AssociateUserRequest\n     */\n    email: string;\n}\n\n/**\n * Check if a given object implements the AssociateUserRequest interface.\n */\nexport function instanceOfAssociateUserRequest(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"email\" in value;\n\n    return isInstance;\n}\n\nexport function AssociateUserRequestFromJSON(json: any): AssociateUserRequest {\n    return AssociateUserRequestFromJSONTyped(json, false);\n}\n\nexport function AssociateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssociateUserRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'email': json['email'],\n    };\n}\n\nexport function AssociateUserRequestToJSON(value?: AssociateUserRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'email': value.email,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"http://localhost\".replace(/\\/+$/, \"\");\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    set config(configuration: Configuration) {\n        this.configuration = configuration;\n    }\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI | undefined {\n        return this.configuration.fetchApi;\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : async () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport const DefaultConfig = new Configuration();\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n\t private static readonly jsonRegex = new RegExp('^(:?application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(:?;.*)?$', 'i');\n    private middleware: Middleware[];\n\n    constructor(protected configuration = DefaultConfig) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    protected isJsonMime(mime: string | null | undefined): boolean {\n        if (!mime) {\n            return false;\n        }\n        return BaseAPI.jsonRegex.test(mime);\n    }\n\n    protected async request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response> {\n        const { url, init } = await this.createFetchParams(context, initOverrides);\n        const response = await this.fetchApi(url, init);\n        if (response && (response.status >= 200 && response.status < 300)) {\n            return response;\n        }\n        const res = await response.text();\n        let json;\n        try {\n            json = JSON.parse(res);\n        } catch (e) {\n            /* do nothing, see what's there */\n        }\n        if (json && 'message' in json) {\n            const { message } = json;\n            throw new ResponseError(response, message);\n        }\n        if (json && 'errors' in json) {\n            const {\n              errors: [message],\n            } = json;\n            throw new ResponseError(response, message);\n        }\n\n        if (res) {\n            throw new ResponseError(response, res);\n        }\n\n        throw new ResponseError(response, 'Response returned an error code');\n    }\n\n    private async createFetchParams(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        Object.keys(headers).forEach(key => headers[key] === undefined ? delete headers[key] : {});\n\n        const initOverrideFn =\n            typeof initOverrides === \"function\"\n                ? initOverrides\n                : async () => initOverrides;\n\n        const initParams = {\n            method: context.method,\n            headers,\n            body: context.body,\n            credentials: this.configuration.credentials,\n        };\n\n        const overriddenInit: RequestInit = {\n            ...initParams,\n            ...(await initOverrideFn({\n                init: initParams,\n                context,\n            }))\n        };\n\n        const init: RequestInit = {\n            ...overriddenInit,\n            body:\n                isFormData(overriddenInit.body) ||\n                overriddenInit.body instanceof URLSearchParams ||\n                isBlob(overriddenInit.body)\n                    ? overriddenInit.body\n                    : JSON.stringify(overriddenInit.body),\n        };\n\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response: Response | undefined = undefined;\n        try {\n            response = await (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);\n        } catch (e) {\n            for (const middleware of this.middleware) {\n                if (middleware.onError) {\n                    response = await middleware.onError({\n                        fetch: this.fetchApi,\n                        url: fetchParams.url,\n                        init: fetchParams.init,\n                        error: e,\n                        response: response ? response.clone() : undefined,\n                    }) || response;\n                }\n            }\n            if (response === undefined) {\n              if (e instanceof Error) {\n                throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');\n              } else {\n                throw e;\n              }\n            }\n        }\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nfunction isBlob(value: any): value is Blob {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n\nfunction isFormData(value: any): value is FormData {\n    return typeof FormData !== \"undefined\" && value instanceof FormData;\n}\n\nexport class ResponseError extends Error {\n    name: \"ResponseError\" = \"ResponseError\";\n    constructor(public response: Response, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class FetchError extends Error {\n    name: \"FetchError\" = \"FetchError\";\n    constructor(public cause: Error, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type HTTPRequestInit = { headers?: HTTPHeaders; method: HTTPMethod; credentials?: RequestCredentials; body?: HTTPBody };\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport type InitOverrideFunction = (requestContext: { init: HTTPRequestInit, context: RequestOpts }) => Promise<RequestInit>\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map(key => querystringSingleKey(key, params[key], prefix))\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nfunction querystringSingleKey(key: string, value: string | number | null | undefined | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery, keyPrefix: string = ''): string {\n    const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);\n    if (value instanceof Array) {\n        const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n            .join(`&${encodeURIComponent(fullKey)}=`);\n        return `${encodeURIComponent(fullKey)}=${multiValue}`;\n    }\n    if (value instanceof Set) {\n        const valueAsArray = Array.from(value);\n        return querystringSingleKey(key, valueAsArray, keyPrefix);\n    }\n    if (value instanceof Date) {\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n    }\n    if (value instanceof Object) {\n        return querystring(value as HTTPQuery, fullKey);\n    }\n    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string;\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface ErrorContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    error: unknown;\n    response?: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n    onError?(context: ErrorContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateBasicUserRequest\n */\nexport interface CreateBasicUserRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateBasicUserRequest\n     */\n    email: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateBasicUserRequest\n     */\n    password: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateBasicUserRequest\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateBasicUserRequest\n     */\n    givenName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateBasicUserRequest\n     */\n    familyName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateBasicUserRequest\n     */\n    picture?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateBasicUserRequest\n     */\n    newTenantName?: string;\n}\n\n/**\n * Check if a given object implements the CreateBasicUserRequest interface.\n */\nexport function instanceOfCreateBasicUserRequest(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"email\" in value;\n    isInstance = isInstance && \"password\" in value;\n\n    return isInstance;\n}\n\nexport function CreateBasicUserRequestFromJSON(json: any): CreateBasicUserRequest {\n    return CreateBasicUserRequestFromJSONTyped(json, false);\n}\n\nexport function CreateBasicUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBasicUserRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'email': json['email'],\n        'password': json['password'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],\n        'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],\n        'picture': !exists(json, 'picture') ? undefined : json['picture'],\n        'newTenantName': !exists(json, 'newTenantName') ? undefined : json['newTenantName'],\n    };\n}\n\nexport function CreateBasicUserRequestToJSON(value?: CreateBasicUserRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'email': value.email,\n        'password': value.password,\n        'name': value.name,\n        'givenName': value.givenName,\n        'familyName': value.familyName,\n        'picture': value.picture,\n        'newTenantName': value.newTenantName,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateTenantRequest\n */\nexport interface CreateTenantRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateTenantRequest\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateTenantRequest\n     */\n    id?: string;\n}\n\n/**\n * Check if a given object implements the CreateTenantRequest interface.\n */\nexport function instanceOfCreateTenantRequest(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n\n    return isInstance;\n}\n\nexport function CreateTenantRequestFromJSON(json: any): CreateTenantRequest {\n    return CreateTenantRequestFromJSONTyped(json, false);\n}\n\nexport function CreateTenantRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTenantRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n        'id': !exists(json, 'id') ? undefined : json['id'],\n    };\n}\n\nexport function CreateTenantRequestToJSON(value?: CreateTenantRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'id': value.id,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Tenant\n */\nexport interface Tenant {\n    /**\n     * \n     * @type {string}\n     * @memberof Tenant\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Tenant\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the Tenant interface.\n */\nexport function instanceOfTenant(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"id\" in value;\n\n    return isInstance;\n}\n\nexport function TenantFromJSON(json: any): Tenant {\n    return TenantFromJSONTyped(json, false);\n}\n\nexport function TenantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tenant {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n    };\n}\n\nexport function TenantToJSON(value?: Tenant | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'name': value.name,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TenantUser\n */\nexport interface TenantUser {\n    /**\n     * \n     * @type {string}\n     * @memberof TenantUser\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TenantUser\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TenantUser\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TenantUser\n     */\n    givenName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TenantUser\n     */\n    familyName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TenantUser\n     */\n    picture?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof TenantUser\n     */\n    created?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof TenantUser\n     */\n    updated?: Date;\n}\n\n/**\n * Check if a given object implements the TenantUser interface.\n */\nexport function instanceOfTenantUser(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function TenantUserFromJSON(json: any): TenantUser {\n    return TenantUserFromJSONTyped(json, false);\n}\n\nexport function TenantUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantUser {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],\n        'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],\n        'picture': !exists(json, 'picture') ? undefined : json['picture'],\n        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),\n        'updated': !exists(json, 'updated') ? undefined : (new Date(json['updated'])),\n    };\n}\n\nexport function TenantUserToJSON(value?: TenantUser | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'email': value.email,\n        'name': value.name,\n        'givenName': value.givenName,\n        'familyName': value.familyName,\n        'picture': value.picture,\n        'created': value.created === undefined ? undefined : (value.created.toISOString()),\n        'updated': value.updated === undefined ? undefined : (value.updated.toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateUserRequest\n */\nexport interface UpdateUserRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserRequest\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserRequest\n     */\n    givenName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserRequest\n     */\n    familyName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserRequest\n     */\n    picture?: string;\n}\n\n/**\n * Check if a given object implements the UpdateUserRequest interface.\n */\nexport function instanceOfUpdateUserRequest(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function UpdateUserRequestFromJSON(json: any): UpdateUserRequest {\n    return UpdateUserRequestFromJSONTyped(json, false);\n}\n\nexport function UpdateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],\n        'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],\n        'picture': !exists(json, 'picture') ? undefined : json['picture'],\n    };\n}\n\nexport function UpdateUserRequestToJSON(value?: UpdateUserRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'givenName': value.givenName,\n        'familyName': value.familyName,\n        'picture': value.picture,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface User\n */\nexport interface User {\n    /**\n     * \n     * @type {string}\n     * @memberof User\n     */\n    id?: string;\n    /**\n     * \n     * @type {Set<string>}\n     * @memberof User\n     */\n    tenants?: Set<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof User\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof User\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof User\n     */\n    givenName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof User\n     */\n    familyName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof User\n     */\n    picture?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof User\n     */\n    created?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof User\n     */\n    updated?: Date;\n}\n\n/**\n * Check if a given object implements the User interface.\n */\nexport function instanceOfUser(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function UserFromJSON(json: any): User {\n    return UserFromJSONTyped(json, false);\n}\n\nexport function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'tenants': !exists(json, 'tenants') ? undefined : json['tenants'],\n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],\n        'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],\n        'picture': !exists(json, 'picture') ? undefined : json['picture'],\n        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),\n        'updated': !exists(json, 'updated') ? undefined : (new Date(json['updated'])),\n    };\n}\n\nexport function UserToJSON(value?: User | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'tenants': value.tenants === undefined ? undefined : Array.from(value.tenants as Set<any>),\n        'email': value.email,\n        'name': value.name,\n        'givenName': value.givenName,\n        'familyName': value.familyName,\n        'picture': value.picture,\n        'created': value.created === undefined ? undefined : (value.created.toISOString()),\n        'updated': value.updated === undefined ? undefined : (value.updated.toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  User,\n} from '../models/index';\nimport {\n    UserFromJSON,\n    UserToJSON,\n} from '../models/index';\n\nexport interface SigninRequest {\n    tenantId: string;\n}\n\n/**\n * AuthenticationApi - interface\n * \n * @export\n * @interface AuthenticationApiInterface\n */\nexport interface AuthenticationApiInterface {\n    /**\n     * Returns information about the users within the tenant provided\n     * @summary lists users in the tenant\n     * @param {string} tenantId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApiInterface\n     */\n    signin(requestParameters: SigninRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User>;\n\n}\n\n/**\n * \n */\nexport class AuthenticationApi extends runtime.BaseAPI implements AuthenticationApiInterface {\n\n    /**\n     * Returns information about the users within the tenant provided\n     * lists users in the tenant\n     */\n    async signin(requestParameters: SigninRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling signin.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/auth/signin`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));\n        return await request.value();\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  User,\n} from '../models/index';\nimport {\n    UserFromJSON,\n    UserToJSON,\n} from '../models/index';\n\n/**\n * DefaultApi - interface\n * \n * @export\n * @interface DefaultApiInterface\n */\nexport interface DefaultApiInterface {\n    /**\n     * Returns information about the principal associated with the session provided\n     * @summary Identify the principal\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApiInterface\n     */\n    me(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User>;\n\n}\n\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI implements DefaultApiInterface {\n\n    /**\n     * Returns information about the principal associated with the session provided\n     * Identify the principal\n     */\n    async me(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/me`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));\n        return await request.value();\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  APIError,\n  AssociateUserRequest,\n  CreateTenantRequest,\n  Tenant,\n} from '../models/index';\nimport {\n    APIErrorFromJSON,\n    APIErrorToJSON,\n    AssociateUserRequestFromJSON,\n    AssociateUserRequestToJSON,\n    CreateTenantRequestFromJSON,\n    CreateTenantRequestToJSON,\n    TenantFromJSON,\n    TenantToJSON,\n} from '../models/index';\n\nexport interface CreateTenantOperationRequest {\n    createTenantRequest?: CreateTenantRequest;\n}\n\nexport interface DeleteTenantRequest {\n    tenantId: string;\n}\n\nexport interface GetTenantRequest {\n    tenantId: string;\n}\n\nexport interface LinkUserRequest {\n    tenantId: string;\n    associateUserRequest?: AssociateUserRequest;\n}\n\nexport interface UnlinkUserRequest {\n    tenantId: string;\n    email: string;\n}\n\nexport interface UpdateTenantRequest {\n    tenantId: string;\n}\n\n/**\n * TenantsApi - interface\n * \n * @export\n * @interface TenantsApiInterface\n */\nexport interface TenantsApiInterface {\n    /**\n     * Creates a new tenant in a database.\n     * @summary Create a tenant\n     * @param {CreateTenantRequest} [createTenantRequest] A wrapper for the tenant name.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantsApiInterface\n     */\n    createTenant(requestParameters: CreateTenantOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;\n\n    /**\n     * \n     * @summary Deletes a tenant.\n     * @param {string} tenantId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantsApiInterface\n     */\n    deleteTenant(requestParameters: DeleteTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;\n\n    /**\n     * \n     * @summary Obtains a specific tenant.\n     * @param {string} tenantId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantsApiInterface\n     */\n    getTenant(requestParameters: GetTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;\n\n    /**\n     * \n     * @summary associates an existing user with the tenant\n     * @param {string} tenantId \n     * @param {AssociateUserRequest} [associateUserRequest] The email of the user you want to add to a tenant. \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantsApiInterface\n     */\n    linkUser(requestParameters: LinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;\n\n    /**\n     * Creates a user in the database\n     * @summary list tenants by user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantsApiInterface\n     */\n    listTenants(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Tenant>>;\n\n    /**\n     * removes an associated user from a specified tenant.\n     * @summary removes a user from a tenant\n     * @param {string} tenantId \n     * @param {string} email \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantsApiInterface\n     */\n    unlinkUser(requestParameters: UnlinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;\n\n    /**\n     * \n     * @summary Obtains a specific tenant.\n     * @param {string} tenantId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantsApiInterface\n     */\n    updateTenant(requestParameters: UpdateTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;\n\n}\n\n/**\n * \n */\nexport class TenantsApi extends runtime.BaseAPI implements TenantsApiInterface {\n\n    /**\n     * Creates a new tenant in a database.\n     * Create a tenant\n     */\n    async createTenant(requestParameters: CreateTenantOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        headerParameters['Content-Type'] = 'application/json';\n\n\n        const response = await this.request({\n            path: `/api/tenants`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateTenantRequestToJSON(requestParameters.createTenantRequest),\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => TenantFromJSON(jsonValue));\n        return await request.value();\n    }\n    /**\n     * Deletes a tenant.\n     */\n    async deleteTenant(requestParameters: DeleteTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling deleteTenant.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/tenants/{tenantId}`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.VoidApiResponse(response);\n        return await request.value();\n    }\n    /**\n     * Obtains a specific tenant.\n     */\n    async getTenant(requestParameters: GetTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling getTenant.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/tenants/{tenantId}`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.VoidApiResponse(response);\n        return await request.value();\n    }\n    /**\n     * associates an existing user with the tenant\n     */\n    async linkUser(requestParameters: LinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling linkUser.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        headerParameters['Content-Type'] = 'application/json';\n\n\n        const response = await this.request({\n            path: `/api/tenants/{tenantId}/users`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AssociateUserRequestToJSON(requestParameters.associateUserRequest),\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.VoidApiResponse(response);\n        return await request.value();\n    }\n    /**\n     * Creates a user in the database\n     * list tenants by user\n     */\n    async listTenants(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Tenant>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/tenants`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TenantFromJSON));\n        return await request.value();\n    }\n    /**\n     * removes an associated user from a specified tenant.\n     * removes a user from a tenant\n     */\n    async unlinkUser(requestParameters: UnlinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling unlinkUser.');\n        }\n\n        if (requestParameters.email === null || requestParameters.email === undefined) {\n            throw new runtime.RequiredError('email','Required parameter requestParameters.email was null or undefined when calling unlinkUser.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/tenants/{tenantId}/users/{email}`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))).replace(`{${\"email\"}}`, encodeURIComponent(String(requestParameters.email))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.VoidApiResponse(response);\n        return await request.value();\n    }\n    /**\n     * Obtains a specific tenant.\n     */\n    async updateTenant(requestParameters: UpdateTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling updateTenant.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/tenants/{tenantId}`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => TenantFromJSON(jsonValue));\n        return await request.value();\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Niledatabase regional APIs\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  APIError,\n  CreateBasicUserRequest,\n  TenantUser,\n  UpdateUserRequest,\n  User,\n} from '../models/index';\nimport {\n    APIErrorFromJSON,\n    APIErrorToJSON,\n    CreateBasicUserRequestFromJSON,\n    CreateBasicUserRequestToJSON,\n    TenantUserFromJSON,\n    TenantUserToJSON,\n    UpdateUserRequestFromJSON,\n    UpdateUserRequestToJSON,\n    UserFromJSON,\n    UserToJSON,\n} from '../models/index';\n\nexport interface CreateTenantUserRequest {\n    tenantId: string;\n    createBasicUserRequest?: CreateBasicUserRequest;\n}\n\nexport interface CreateUserRequest {\n    tenantId?: string;\n    newTenantName?: string;\n    createBasicUserRequest?: CreateBasicUserRequest;\n}\n\nexport interface ListTenantUsersRequest {\n    tenantId: string;\n}\n\nexport interface ListUsersRequest {\n    tenantId?: string;\n}\n\nexport interface SignUpRequest {\n    tenantId?: string;\n    newTenantName?: string;\n    createBasicUserRequest?: CreateBasicUserRequest;\n}\n\nexport interface UpdateUserOperationRequest {\n    userid: string;\n    updateUserRequest?: UpdateUserRequest;\n}\n\n/**\n * UsersApi - interface\n * \n * @export\n * @interface UsersApiInterface\n */\nexport interface UsersApiInterface {\n    /**\n     * Creates a new user and associates that user with the specified tenant.\n     * @summary Create a user in a tenant\n     * @param {string} tenantId \n     * @param {CreateBasicUserRequest} [createBasicUserRequest] The email and password combination the user will use to authenticate. The &#x60;name&#x60; is optional; if provided it will be recorded in the &#x60;users&#x60; table. \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApiInterface\n     */\n    createTenantUser(requestParameters: CreateTenantUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User>;\n\n    /**\n     * Creates a user in the database\n     * @summary Creates a user\n     * @param {string} [tenantId] A tenant id to add the user to when they are created\n     * @param {string} [newTenantName] A tenant name to create, then the user to when they are created\n     * @param {CreateBasicUserRequest} [createBasicUserRequest] The email and password combination the user will use to authenticate. The &#x60;name&#x60; is optional; if provided it will be recorded in the &#x60;users&#x60; table. The &#x60;newTenant&#x60; is optional; if provided, it is used as the name of a new tenant record associated with the newly created user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApiInterface\n     */\n    createUser(requestParameters: CreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User>;\n\n    /**\n     * Lists users that are associated with the specified tenant.\n     * @summary List tenant users\n     * @param {string} tenantId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApiInterface\n     */\n    listTenantUsers(requestParameters: ListTenantUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<User>>;\n\n    /**\n     * Returns information about the users within the tenant provided. You can also pass the a `nile.tenant_id` in the header or in a cookie.\n     * @summary lists users in the tenant\n     * @param {string} [tenantId] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApiInterface\n     */\n    listUsers(requestParameters: ListUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TenantUser>>;\n\n    /**\n     * signs a user up and logs them in. Expects a email and password combo\n     * @summary signs a user up\n     * @param {string} [tenantId] A tenant id to add the user to when they are created\n     * @param {string} [newTenantName] A tenant name to create, then the user to when they are created\n     * @param {CreateBasicUserRequest} [createBasicUserRequest] The email and password combination the user will use to authenticate. The &#x60;name&#x60; is optional; if provided it will be recorded in the &#x60;users&#x60; table. The &#x60;newTenant&#x60; is optional; if provided, it is used as the name of a new tenant record associated with the newly created user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApiInterface\n     */\n    signUp(requestParameters: SignUpRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User>;\n\n    /**\n     * updates a user within the tenant\n     * @summary update a user\n     * @param {string} userid \n     * @param {UpdateUserRequest} [updateUserRequest] Update a user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApiInterface\n     */\n    updateUser(requestParameters: UpdateUserOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User>;\n\n}\n\n/**\n * \n */\nexport class UsersApi extends runtime.BaseAPI implements UsersApiInterface {\n\n    /**\n     * Creates a new user and associates that user with the specified tenant.\n     * Create a user in a tenant\n     */\n    async createTenantUser(requestParameters: CreateTenantUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling createTenantUser.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        headerParameters['Content-Type'] = 'application/json';\n\n\n        const response = await this.request({\n            path: `/api/tenants/{tenantId}/users`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateBasicUserRequestToJSON(requestParameters.createBasicUserRequest),\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));\n        return await request.value();\n    }\n    /**\n     * Creates a user in the database\n     * Creates a user\n     */\n    async createUser(requestParameters: CreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {\n        const queryParameters: any = {};\n\n        if (requestParameters.tenantId !== undefined) {\n            queryParameters['tenantId'] = requestParameters.tenantId;\n        }\n\n        if (requestParameters.newTenantName !== undefined) {\n            queryParameters['newTenantName'] = requestParameters.newTenantName;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        headerParameters['Content-Type'] = 'application/json';\n\n\n        const response = await this.request({\n            path: `/api/users`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateBasicUserRequestToJSON(requestParameters.createBasicUserRequest),\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));\n        return await request.value();\n    }\n    /**\n     * Lists users that are associated with the specified tenant.\n     * List tenant users\n     */\n    async listTenantUsers(requestParameters: ListTenantUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<User>> {\n        if (requestParameters.tenantId === null || requestParameters.tenantId === undefined) {\n            throw new runtime.RequiredError('tenantId','Required parameter requestParameters.tenantId was null or undefined when calling listTenantUsers.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/tenants/{tenantId}/users`.replace(`{${\"tenantId\"}}`, encodeURIComponent(String(requestParameters.tenantId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserFromJSON));\n        return await request.value();\n    }\n    /**\n     * Returns information about the users within the tenant provided. You can also pass the a `nile.tenant_id` in the header or in a cookie.\n     * lists users in the tenant\n     */\n    async listUsers(requestParameters: ListUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TenantUser>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.tenantId !== undefined) {\n            queryParameters['tenantId'] = requestParameters.tenantId;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        const response = await this.request({\n            path: `/api/users`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TenantUserFromJSON));\n        return await request.value();\n    }\n    /**\n     * signs a user up and logs them in. Expects a email and password combo\n     * signs a user up\n     */\n    async signUp(requestParameters: SignUpRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {\n        const queryParameters: any = {};\n\n        if (requestParameters.tenantId !== undefined) {\n            queryParameters['tenantId'] = requestParameters.tenantId;\n        }\n\n        if (requestParameters.newTenantName !== undefined) {\n            queryParameters['newTenantName'] = requestParameters.newTenantName;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        headerParameters['Content-Type'] = 'application/json';\n\n\n        const response = await this.request({\n            path: `/api/signup`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateBasicUserRequestToJSON(requestParameters.createBasicUserRequest),\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));\n        return await request.value();\n    }\n    /**\n     * updates a user within the tenant\n     * update a user\n     */\n    async updateUser(requestParameters: UpdateUserOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {\n        if (requestParameters.userid === null || requestParameters.userid === undefined) {\n            throw new runtime.RequiredError('userid','Required parameter requestParameters.userid was null or undefined when calling updateUser.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const requestTenantId = localStorage.getItem('tenantId');\n        if (requestTenantId) {\n          headerParameters['nile.tenant_id'] = requestTenantId;\n        }\n\n        headerParameters['Content-Type'] = 'application/json';\n\n\n        const response = await this.request({\n            path: `/api/users/{userid}`.replace(`{${\"userid\"}}`, encodeURIComponent(String(requestParameters.userid))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateUserRequestToJSON(requestParameters.updateUserRequest),\n        }, initOverrides);\n        const headers = new Headers(response.headers);\n        const responseTenantId = headers.get('nile.tenant_id')\n        if (responseTenantId) {\n          localStorage.setItem('tenantId', responseTenantId);\n        }\n        const request = new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));\n        return await request.value();\n    }\n}\n","// these files are generated in the build step\nexport * from './openapi/src/models';\nexport * from './openapi/src/apis';\nimport {\n  AuthenticationApi,\n  UsersApi,\n  Configuration,\n  ConfigurationParameters,\n  DefaultApi,\n  User,\n  InitOverrideFunction,\n  BaseAPI,\n  TenantsApi,\n} from './openapi/src';\n\nexport default class Browser extends BaseAPI {\n  auth: AuthenticationApi;\n  users: UsersApi;\n  tenants: TenantsApi;\n  me: (initOverrides?: RequestInit | InitOverrideFunction) => Promise<User>;\n  constructor(params: ConfigurationParameters) {\n    super();\n    const config = new Configuration(params);\n    this.configuration = config;\n    this.auth = new AuthenticationApi(config);\n    this.tenants = new TenantsApi(config);\n    this.users = new UsersApi(config);\n    const { me } = new DefaultApi(config);\n    this.me = me;\n  }\n}\n"],"names":["APIErrorFromJSONTyped","json","ignoreDiscriminator","errorCode","message","statusCode","AssociateUserRequestFromJSONTyped","email","AssociateUserRequestToJSON","value","undefined","BASE_PATH","replace","Configuration","configuration","this","key","set","get","basePath","fetchApi","middleware","queryParamsStringify","querystring","username","password","apiKey","accessToken","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","headers","credentials","DefaultConfig","BaseAPI","_this","_ref2","_callee2","url","init","fetchParams","_iterator","_step","_middleware","response","_iterator2","_step2","_iterator3","_step3","_middleware2","_context2","_createForOfIteratorHelperLoose","done","pre","_extends","fetch","t0","sent","t1","onError","error","clone","t2","Error","FetchError","post","t3","_x","_x2","apply","arguments","_proto","prototype","withMiddleware","_next$middleware","concat","withPreMiddleware","_len","length","preMiddlewares","Array","_key","middlewares","map","withPostMiddleware","_len2","postMiddlewares","_key2","isJsonMime","mime","jsonRegex","test","request","_request","_callee3","context","initOverrides","_yield$this$createFet","res","_context3","createFetchParams","status","text","JSON","parse","e","ResponseError","errors","_x3","_x4","_createFetchParams","_callee5","initOverrideFn","initParams","overriddenInit","_context5","path","query","Object","keys","assign","forEach","_callee4","_context4","method","body","FormData","URLSearchParams","isBlob","stringify","_x5","_x6","constructor","slice","Blob","RegExp","_Error","msg","_this2","call","name","_inheritsLoose","_wrapNativeSuper","_Error2","cause","_this3","RequiredError","_Error3","field","_this4","exists","params","prefix","querystringSingleKey","filter","part","join","keyPrefix","fullKey","multiValue","singleValue","encodeURIComponent","String","Set","from","Date","toISOString","JSONApiResponse","raw","transformer","jsonValue","_value","_callee6","_context6","VoidApiResponse","_value2","_callee7","_context7","CreateBasicUserRequestFromJSONTyped","givenName","familyName","picture","newTenantName","CreateBasicUserRequestToJSON","CreateTenantRequestFromJSONTyped","id","CreateTenantRequestToJSON","TenantFromJSON","TenantFromJSONTyped","TenantUserFromJSON","TenantUserFromJSONTyped","created","updated","UpdateUserRequestFromJSONTyped","UpdateUserRequestToJSON","UserFromJSON","UserFromJSONTyped","tenants","AuthenticationApi","_runtime$BaseAPI","signin","_signin","requestParameters","queryParameters","headerParameters","requestTenantId","responseTenantId","tenantId","runtime","localStorage","getItem","Headers","setItem","DefaultApi","me","_me","TenantsApi","createTenant","_createTenant","createTenantRequest","deleteTenant","_deleteTenant","getTenant","_getTenant","linkUser","_linkUser","associateUserRequest","_x7","_x8","listTenants","_listTenants","_x9","unlinkUser","_unlinkUser","_x10","_x11","updateTenant","_updateTenant","_x12","_x13","UsersApi","createTenantUser","_createTenantUser","createBasicUserRequest","createUser","_createUser","listTenantUsers","_listTenantUsers","listUsers","_listUsers","signUp","_signUp","updateUser","_updateUser","userid","updateUserRequest","Browser","_BaseAPI","auth","users","config","_DefaultApi","InternalError","BadRequest","UnsupportedOperation","EntityNotFound","DuplicateEntity","InvalidCredentials","UnknownOidcProvider","UnknownOidcParty","ProviderAlreadyExists","ProviderConfigError","ProviderMismatch","ProviderUpdateError","ProviderDisabled","SessionStateMissing","SessionStateMismatch","OidcCodeMissing","TenantNotFound","ConstraintViolation","SqlException","DbCreationFailure","DbStatusFailure","DbInitializationFailure","DbConfigMissing","UnauthorizedWorkspaceAccess","EmailSendFailure","JdbcException","OidcException","RegionMismatch","CredentialCreationFailure","CredentialPropagationFailure","isInstance"],"mappings":"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"}