/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AssociateUserRequest, CreateTenantRequest, Tenant } from '../models/index';
export interface CreateTenantOperationRequest {
    createTenantRequest?: CreateTenantRequest;
}
export interface DeleteTenantRequest {
    tenantId: string;
}
export interface GetTenantRequest {
    tenantId: string;
}
export interface LinkUserRequest {
    tenantId: string;
    associateUserRequest?: AssociateUserRequest;
}
export interface UnlinkUserRequest {
    tenantId: string;
    email: string;
}
export interface UpdateTenantRequest {
    tenantId: string;
}
/**
 * TenantsApi - interface
 *
 * @export
 * @interface TenantsApiInterface
 */
export interface TenantsApiInterface {
    /**
     * Creates a new tenant in a database.
     * @summary Create a tenant
     * @param {CreateTenantRequest} [createTenantRequest] A wrapper for the tenant name.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantsApiInterface
     */
    createTenant(requestParameters: CreateTenantOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
    /**
     *
     * @summary Deletes a tenant.
     * @param {string} tenantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantsApiInterface
     */
    deleteTenant(requestParameters: DeleteTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary Obtains a specific tenant.
     * @param {string} tenantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantsApiInterface
     */
    getTenant(requestParameters: GetTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary associates an existing user with the tenant
     * @param {string} tenantId
     * @param {AssociateUserRequest} [associateUserRequest] The email of the user you want to add to a tenant.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantsApiInterface
     */
    linkUser(requestParameters: LinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Creates a user in the database
     * @summary list tenants by user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantsApiInterface
     */
    listTenants(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Tenant>>;
    /**
     * removes an associated user from a specified tenant.
     * @summary removes a user from a tenant
     * @param {string} tenantId
     * @param {string} email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantsApiInterface
     */
    unlinkUser(requestParameters: UnlinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary Obtains a specific tenant.
     * @param {string} tenantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TenantsApiInterface
     */
    updateTenant(requestParameters: UpdateTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
}
/**
 *
 */
export declare class TenantsApi extends runtime.BaseAPI implements TenantsApiInterface {
    /**
     * Creates a new tenant in a database.
     * Create a tenant
     */
    createTenant(requestParameters: CreateTenantOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
    /**
     * Deletes a tenant.
     */
    deleteTenant(requestParameters: DeleteTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Obtains a specific tenant.
     */
    getTenant(requestParameters: GetTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * associates an existing user with the tenant
     */
    linkUser(requestParameters: LinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Creates a user in the database
     * list tenants by user
     */
    listTenants(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Tenant>>;
    /**
     * removes an associated user from a specified tenant.
     * removes a user from a tenant
     */
    unlinkUser(requestParameters: UnlinkUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Obtains a specific tenant.
     */
    updateTenant(requestParameters: UpdateTenantRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tenant>;
}
//# sourceMappingURL=TenantsApi.d.ts.map