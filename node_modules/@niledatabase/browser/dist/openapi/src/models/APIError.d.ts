/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface APIError
 */
export interface APIError {
    /**
     *
     * @type {string}
     * @memberof APIError
     */
    errorCode: APIErrorErrorCodeEnum;
    /**
     *
     * @type {string}
     * @memberof APIError
     */
    message: string;
    /**
     *
     * @type {number}
     * @memberof APIError
     */
    statusCode: number;
}
/**
 * @export
 */
export declare const APIErrorErrorCodeEnum: {
    readonly InternalError: "internal_error";
    readonly BadRequest: "bad_request";
    readonly UnsupportedOperation: "unsupported_operation";
    readonly EntityNotFound: "entity_not_found";
    readonly DuplicateEntity: "duplicate_entity";
    readonly InvalidCredentials: "invalid_credentials";
    readonly UnknownOidcProvider: "unknown_oidc_provider";
    readonly UnknownOidcParty: "unknown_oidc_party";
    readonly ProviderAlreadyExists: "provider_already_exists";
    readonly ProviderConfigError: "provider_config_error";
    readonly ProviderMismatch: "provider_mismatch";
    readonly ProviderUpdateError: "provider_update_error";
    readonly ProviderDisabled: "provider_disabled";
    readonly SessionStateMissing: "session_state_missing";
    readonly SessionStateMismatch: "session_state_mismatch";
    readonly OidcCodeMissing: "oidc_code_missing";
    readonly TenantNotFound: "tenant_not_found";
    readonly ConstraintViolation: "constraint_violation";
    readonly SqlException: "sql_exception";
    readonly DbCreationFailure: "db_creation_failure";
    readonly DbStatusFailure: "db_status_failure";
    readonly DbInitializationFailure: "db_initialization_failure";
    readonly DbConfigMissing: "db_config_missing";
    readonly UnauthorizedWorkspaceAccess: "unauthorized_workspace_access";
    readonly EmailSendFailure: "email_send_failure";
    readonly JdbcException: "jdbc_exception";
    readonly OidcException: "oidc_exception";
    readonly RegionMismatch: "region_mismatch";
    readonly CredentialCreationFailure: "credential_creation_failure";
    readonly CredentialPropagationFailure: "credential_propagation_failure";
};
export type APIErrorErrorCodeEnum = typeof APIErrorErrorCodeEnum[keyof typeof APIErrorErrorCodeEnum];
/**
 * Check if a given object implements the APIError interface.
 */
export declare function instanceOfAPIError(value: object): boolean;
export declare function APIErrorFromJSON(json: any): APIError;
export declare function APIErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIError;
export declare function APIErrorToJSON(value?: APIError | null): any;
//# sourceMappingURL=APIError.d.ts.map