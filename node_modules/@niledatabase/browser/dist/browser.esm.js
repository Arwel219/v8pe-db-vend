function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c),
      u = i.value;
  } catch (n) {
    return void e(n);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
  return function () {
    var t = this,
      e = arguments;
    return new Promise(function (r, o) {
      var a = n.apply(t, e);
      function _next(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
      }
      function _throw(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
      }
      _next(void 0);
    });
  };
}
function _construct(t, e, r) {
  if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf(p, r.prototype), p;
}
function _defineProperties(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
  }
}
function _createClass(e, r, t) {
  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t) return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function () {
      return o >= r.length ? {
        done: !0
      } : {
        done: !1,
        value: r[o++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _getPrototypeOf(t) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, _getPrototypeOf(t);
}
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}
function _isNativeFunction(t) {
  try {
    return -1 !== Function.toString.call(t).indexOf("[native code]");
  } catch (n) {
    return "function" == typeof t;
  }
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function () {
    return !!t;
  })();
}
function _regeneratorRuntime() {
  _regeneratorRuntime = function () {
    return e;
  };
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function (t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function (t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(typeof e + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) r.push(n);
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function (e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
    },
    stop: function () {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function (e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function (t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function (t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    catch: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw Error("illegal catch attempt");
    },
    delegateYield: function (e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
    return t.__proto__ = e, t;
  }, _setPrototypeOf(t, e);
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _wrapNativeSuper(t) {
  var r = "function" == typeof Map ? new Map() : void 0;
  return _wrapNativeSuper = function (t) {
    if (null === t || !_isNativeFunction(t)) return t;
    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r) {
      if (r.has(t)) return r.get(t);
      r.set(t, Wrapper);
    }
    function Wrapper() {
      return _construct(t, arguments, _getPrototypeOf(this).constructor);
    }
    return Wrapper.prototype = Object.create(t.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), _setPrototypeOf(Wrapper, t);
  }, _wrapNativeSuper(t);
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * @export
 */
var APIErrorErrorCodeEnum = {
  InternalError: 'internal_error',
  BadRequest: 'bad_request',
  UnsupportedOperation: 'unsupported_operation',
  EntityNotFound: 'entity_not_found',
  DuplicateEntity: 'duplicate_entity',
  InvalidCredentials: 'invalid_credentials',
  UnknownOidcProvider: 'unknown_oidc_provider',
  UnknownOidcParty: 'unknown_oidc_party',
  ProviderAlreadyExists: 'provider_already_exists',
  ProviderConfigError: 'provider_config_error',
  ProviderMismatch: 'provider_mismatch',
  ProviderUpdateError: 'provider_update_error',
  ProviderDisabled: 'provider_disabled',
  SessionStateMissing: 'session_state_missing',
  SessionStateMismatch: 'session_state_mismatch',
  OidcCodeMissing: 'oidc_code_missing',
  TenantNotFound: 'tenant_not_found',
  ConstraintViolation: 'constraint_violation',
  SqlException: 'sql_exception',
  DbCreationFailure: 'db_creation_failure',
  DbStatusFailure: 'db_status_failure',
  DbInitializationFailure: 'db_initialization_failure',
  DbConfigMissing: 'db_config_missing',
  UnauthorizedWorkspaceAccess: 'unauthorized_workspace_access',
  EmailSendFailure: 'email_send_failure',
  JdbcException: 'jdbc_exception',
  OidcException: 'oidc_exception',
  RegionMismatch: 'region_mismatch',
  CredentialCreationFailure: 'credential_creation_failure',
  CredentialPropagationFailure: 'credential_propagation_failure'
};
/**
 * Check if a given object implements the APIError interface.
 */
function instanceOfAPIError(value) {
  var isInstance = true;
  isInstance = isInstance && "errorCode" in value;
  isInstance = isInstance && "message" in value;
  isInstance = isInstance && "statusCode" in value;
  return isInstance;
}
function APIErrorFromJSON(json) {
  return APIErrorFromJSONTyped(json);
}
function APIErrorFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'errorCode': json['errorCode'],
    'message': json['message'],
    'statusCode': json['statusCode']
  };
}
function APIErrorToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'errorCode': value.errorCode,
    'message': value.message,
    'statusCode': value.statusCode
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the AssociateUserRequest interface.
 */
function instanceOfAssociateUserRequest(value) {
  var isInstance = true;
  isInstance = isInstance && "email" in value;
  return isInstance;
}
function AssociateUserRequestFromJSON(json) {
  return AssociateUserRequestFromJSONTyped(json);
}
function AssociateUserRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'email': json['email']
  };
}
function AssociateUserRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'email': value.email
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var BASE_PATH = /*#__PURE__*/"http://localhost".replace(/\/+$/, "");
var Configuration = /*#__PURE__*/function () {
  function Configuration(configuration) {
    if (configuration === void 0) {
      configuration = {};
    }
    this.configuration = void 0;
    this.configuration = configuration;
  }
  return _createClass(Configuration, [{
    key: "config",
    set: function set(configuration) {
      this.configuration = configuration;
    }
  }, {
    key: "basePath",
    get: function get() {
      return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;
    }
  }, {
    key: "fetchApi",
    get: function get() {
      return this.configuration.fetchApi;
    }
  }, {
    key: "middleware",
    get: function get() {
      return this.configuration.middleware || [];
    }
  }, {
    key: "queryParamsStringify",
    get: function get() {
      return this.configuration.queryParamsStringify || querystring;
    }
  }, {
    key: "username",
    get: function get() {
      return this.configuration.username;
    }
  }, {
    key: "password",
    get: function get() {
      return this.configuration.password;
    }
  }, {
    key: "apiKey",
    get: function get() {
      var apiKey = this.configuration.apiKey;
      if (apiKey) {
        return typeof apiKey === 'function' ? apiKey : function () {
          return apiKey;
        };
      }
      return undefined;
    }
  }, {
    key: "accessToken",
    get: function get() {
      var accessToken = this.configuration.accessToken;
      if (accessToken) {
        return typeof accessToken === 'function' ? accessToken : /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", accessToken);
              case 1:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
      }
      return undefined;
    }
  }, {
    key: "headers",
    get: function get() {
      return this.configuration.headers;
    }
  }, {
    key: "credentials",
    get: function get() {
      return this.configuration.credentials;
    }
  }]);
}();
var DefaultConfig = /*#__PURE__*/new Configuration();
/**
 * This is the base class for all generated API classes.
 */
var BaseAPI = /*#__PURE__*/function () {
  function BaseAPI(configuration) {
    var _this = this;
    if (configuration === void 0) {
      configuration = DefaultConfig;
    }
    this.configuration = void 0;
    this.middleware = void 0;
    this.fetchApi = /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url, init) {
        var fetchParams, _iterator, _step, _middleware, response, _iterator2, _step2, middleware, _iterator3, _step3, _middleware2;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              fetchParams = {
                url: url,
                init: init
              };
              _iterator = _createForOfIteratorHelperLoose(_this.middleware);
            case 2:
              if ((_step = _iterator()).done) {
                _context2.next = 13;
                break;
              }
              _middleware = _step.value;
              if (!_middleware.pre) {
                _context2.next = 11;
                break;
              }
              _context2.next = 7;
              return _middleware.pre(_extends({
                fetch: _this.fetchApi
              }, fetchParams));
            case 7:
              _context2.t0 = _context2.sent;
              if (_context2.t0) {
                _context2.next = 10;
                break;
              }
              _context2.t0 = fetchParams;
            case 10:
              fetchParams = _context2.t0;
            case 11:
              _context2.next = 2;
              break;
            case 13:
              response = undefined;
              _context2.prev = 14;
              _context2.next = 17;
              return (_this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);
            case 17:
              response = _context2.sent;
              _context2.next = 40;
              break;
            case 20:
              _context2.prev = 20;
              _context2.t1 = _context2["catch"](14);
              _iterator2 = _createForOfIteratorHelperLoose(_this.middleware);
            case 23:
              if ((_step2 = _iterator2()).done) {
                _context2.next = 34;
                break;
              }
              middleware = _step2.value;
              if (!middleware.onError) {
                _context2.next = 32;
                break;
              }
              _context2.next = 28;
              return middleware.onError({
                fetch: _this.fetchApi,
                url: fetchParams.url,
                init: fetchParams.init,
                error: _context2.t1,
                response: response ? response.clone() : undefined
              });
            case 28:
              _context2.t2 = _context2.sent;
              if (_context2.t2) {
                _context2.next = 31;
                break;
              }
              _context2.t2 = response;
            case 31:
              response = _context2.t2;
            case 32:
              _context2.next = 23;
              break;
            case 34:
              if (!(response === undefined)) {
                _context2.next = 40;
                break;
              }
              if (!(_context2.t1 instanceof Error)) {
                _context2.next = 39;
                break;
              }
              throw new FetchError(_context2.t1, 'The request failed and the interceptors did not return an alternative response');
            case 39:
              throw _context2.t1;
            case 40:
              _iterator3 = _createForOfIteratorHelperLoose(_this.middleware);
            case 41:
              if ((_step3 = _iterator3()).done) {
                _context2.next = 52;
                break;
              }
              _middleware2 = _step3.value;
              if (!_middleware2.post) {
                _context2.next = 50;
                break;
              }
              _context2.next = 46;
              return _middleware2.post({
                fetch: _this.fetchApi,
                url: fetchParams.url,
                init: fetchParams.init,
                response: response.clone()
              });
            case 46:
              _context2.t3 = _context2.sent;
              if (_context2.t3) {
                _context2.next = 49;
                break;
              }
              _context2.t3 = response;
            case 49:
              response = _context2.t3;
            case 50:
              _context2.next = 41;
              break;
            case 52:
              return _context2.abrupt("return", response);
            case 53:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[14, 20]]);
      }));
      return function (_x, _x2) {
        return _ref2.apply(this, arguments);
      };
    }();
    this.configuration = configuration;
    this.middleware = configuration.middleware;
  }
  var _proto = BaseAPI.prototype;
  _proto.withMiddleware = function withMiddleware() {
    var _next$middleware;
    var next = this.clone();
    next.middleware = (_next$middleware = next.middleware).concat.apply(_next$middleware, arguments);
    return next;
  };
  _proto.withPreMiddleware = function withPreMiddleware() {
    for (var _len = arguments.length, preMiddlewares = new Array(_len), _key = 0; _key < _len; _key++) {
      preMiddlewares[_key] = arguments[_key];
    }
    var middlewares = preMiddlewares.map(function (pre) {
      return {
        pre: pre
      };
    });
    return this.withMiddleware.apply(this, middlewares);
  };
  _proto.withPostMiddleware = function withPostMiddleware() {
    for (var _len2 = arguments.length, postMiddlewares = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      postMiddlewares[_key2] = arguments[_key2];
    }
    var middlewares = postMiddlewares.map(function (post) {
      return {
        post: post
      };
    });
    return this.withMiddleware.apply(this, middlewares);
  }
  /**
   * Check if the given MIME is a JSON MIME.
   * JSON MIME examples:
   *   application/json
   *   application/json; charset=UTF8
   *   APPLICATION/JSON
   *   application/vnd.company+json
   * @param mime - MIME (Multipurpose Internet Mail Extensions)
   * @return True if the given MIME is JSON, false otherwise.
   */;
  _proto.isJsonMime = function isJsonMime(mime) {
    if (!mime) {
      return false;
    }
    return BaseAPI.jsonRegex.test(mime);
  };
  _proto.request = /*#__PURE__*/function () {
    var _request = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(context, initOverrides) {
      var _yield$this$createFet, url, init, response, res, json, _json, message, _json2, _json2$errors, _message;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return this.createFetchParams(context, initOverrides);
          case 2:
            _yield$this$createFet = _context3.sent;
            url = _yield$this$createFet.url;
            init = _yield$this$createFet.init;
            _context3.next = 7;
            return this.fetchApi(url, init);
          case 7:
            response = _context3.sent;
            if (!(response && response.status >= 200 && response.status < 300)) {
              _context3.next = 10;
              break;
            }
            return _context3.abrupt("return", response);
          case 10:
            _context3.next = 12;
            return response.text();
          case 12:
            res = _context3.sent;
            try {
              json = JSON.parse(res);
            } catch (e) {
              /* do nothing, see what's there */
            }
            if (!(json && 'message' in json)) {
              _context3.next = 17;
              break;
            }
            _json = json, message = _json.message;
            throw new ResponseError(response, message);
          case 17:
            if (!(json && 'errors' in json)) {
              _context3.next = 20;
              break;
            }
            _json2 = json, _json2$errors = _json2.errors, _message = _json2$errors[0];
            throw new ResponseError(response, _message);
          case 20:
            if (!res) {
              _context3.next = 22;
              break;
            }
            throw new ResponseError(response, res);
          case 22:
            throw new ResponseError(response, 'Response returned an error code');
          case 23:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function request(_x3, _x4) {
      return _request.apply(this, arguments);
    }
    return request;
  }();
  _proto.createFetchParams = /*#__PURE__*/function () {
    var _createFetchParams = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(context, initOverrides) {
      var url, headers, initOverrideFn, initParams, overriddenInit, init;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            url = this.configuration.basePath + context.path;
            if (context.query !== undefined && Object.keys(context.query).length !== 0) {
              // only add the querystring to the URL if there are query parameters.
              // this is done to avoid urls ending with a "?" character which buggy webservers
              // do not handle correctly sometimes.
              url += '?' + this.configuration.queryParamsStringify(context.query);
            }
            headers = Object.assign({}, this.configuration.headers, context.headers);
            Object.keys(headers).forEach(function (key) {
              return headers[key] === undefined ? delete headers[key] : {};
            });
            initOverrideFn = typeof initOverrides === "function" ? initOverrides : /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
              return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                while (1) switch (_context4.prev = _context4.next) {
                  case 0:
                    return _context4.abrupt("return", initOverrides);
                  case 1:
                  case "end":
                    return _context4.stop();
                }
              }, _callee4);
            }));
            initParams = {
              method: context.method,
              headers: headers,
              body: context.body,
              credentials: this.configuration.credentials
            };
            _context5.t0 = _extends;
            _context5.t1 = {};
            _context5.t2 = initParams;
            _context5.next = 11;
            return initOverrideFn({
              init: initParams,
              context: context
            });
          case 11:
            _context5.t3 = _context5.sent;
            overriddenInit = (0, _context5.t0)(_context5.t1, _context5.t2, _context5.t3);
            init = _extends({}, overriddenInit, {
              body: isFormData(overriddenInit.body) || overriddenInit.body instanceof URLSearchParams || isBlob(overriddenInit.body) ? overriddenInit.body : JSON.stringify(overriddenInit.body)
            });
            return _context5.abrupt("return", {
              url: url,
              init: init
            });
          case 15:
          case "end":
            return _context5.stop();
        }
      }, _callee5, this);
    }));
    function createFetchParams(_x5, _x6) {
      return _createFetchParams.apply(this, arguments);
    }
    return createFetchParams;
  }();
  /**
   * Create a shallow clone of `this` by constructing a new instance
   * and then shallow cloning data members.
   */
  _proto.clone = function clone() {
    var constructor = this.constructor;
    var next = new constructor(this.configuration);
    next.middleware = this.middleware.slice();
    return next;
  };
  return BaseAPI;
}();
BaseAPI.jsonRegex = /*#__PURE__*/new RegExp('^(:?application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(:?;.*)?$', 'i');
function isBlob(value) {
  return typeof Blob !== 'undefined' && value instanceof Blob;
}
function isFormData(value) {
  return typeof FormData !== "undefined" && value instanceof FormData;
}
var ResponseError = /*#__PURE__*/function (_Error) {
  function ResponseError(response, msg) {
    var _this2;
    _this2 = _Error.call(this, msg) || this;
    _this2.response = void 0;
    _this2.name = "ResponseError";
    _this2.response = response;
    return _this2;
  }
  _inheritsLoose(ResponseError, _Error);
  return ResponseError;
}(/*#__PURE__*/_wrapNativeSuper(Error));
var FetchError = /*#__PURE__*/function (_Error2) {
  function FetchError(cause, msg) {
    var _this3;
    _this3 = _Error2.call(this, msg) || this;
    _this3.cause = void 0;
    _this3.name = "FetchError";
    _this3.cause = cause;
    return _this3;
  }
  _inheritsLoose(FetchError, _Error2);
  return FetchError;
}(/*#__PURE__*/_wrapNativeSuper(Error));
var RequiredError = /*#__PURE__*/function (_Error3) {
  function RequiredError(field, msg) {
    var _this4;
    _this4 = _Error3.call(this, msg) || this;
    _this4.field = void 0;
    _this4.name = "RequiredError";
    _this4.field = field;
    return _this4;
  }
  _inheritsLoose(RequiredError, _Error3);
  return RequiredError;
}(/*#__PURE__*/_wrapNativeSuper(Error));
function exists(json, key) {
  var value = json[key];
  return value !== null && value !== undefined;
}
function querystring(params, prefix) {
  if (prefix === void 0) {
    prefix = '';
  }
  return Object.keys(params).map(function (key) {
    return querystringSingleKey(key, params[key], prefix);
  }).filter(function (part) {
    return part.length > 0;
  }).join('&');
}
function querystringSingleKey(key, value, keyPrefix) {
  if (keyPrefix === void 0) {
    keyPrefix = '';
  }
  var fullKey = keyPrefix + (keyPrefix.length ? "[" + key + "]" : key);
  if (value instanceof Array) {
    var multiValue = value.map(function (singleValue) {
      return encodeURIComponent(String(singleValue));
    }).join("&" + encodeURIComponent(fullKey) + "=");
    return encodeURIComponent(fullKey) + "=" + multiValue;
  }
  if (value instanceof Set) {
    var valueAsArray = Array.from(value);
    return querystringSingleKey(key, valueAsArray, keyPrefix);
  }
  if (value instanceof Date) {
    return encodeURIComponent(fullKey) + "=" + encodeURIComponent(value.toISOString());
  }
  if (value instanceof Object) {
    return querystring(value, fullKey);
  }
  return encodeURIComponent(fullKey) + "=" + encodeURIComponent(String(value));
}
var JSONApiResponse = /*#__PURE__*/function () {
  function JSONApiResponse(raw, transformer) {
    if (transformer === void 0) {
      transformer = function transformer(jsonValue) {
        return jsonValue;
      };
    }
    this.raw = void 0;
    this.transformer = void 0;
    this.raw = raw;
    this.transformer = transformer;
  }
  var _proto2 = JSONApiResponse.prototype;
  _proto2.value = /*#__PURE__*/function () {
    var _value = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            _context6.t0 = this;
            _context6.next = 3;
            return this.raw.json();
          case 3:
            _context6.t1 = _context6.sent;
            return _context6.abrupt("return", _context6.t0.transformer.call(_context6.t0, _context6.t1));
          case 5:
          case "end":
            return _context6.stop();
        }
      }, _callee6, this);
    }));
    function value() {
      return _value.apply(this, arguments);
    }
    return value;
  }();
  return JSONApiResponse;
}();
var VoidApiResponse = /*#__PURE__*/function () {
  function VoidApiResponse(raw) {
    this.raw = void 0;
    this.raw = raw;
  }
  var _proto3 = VoidApiResponse.prototype;
  _proto3.value = /*#__PURE__*/function () {
    var _value2 = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            return _context7.abrupt("return", undefined);
          case 1:
          case "end":
            return _context7.stop();
        }
      }, _callee7);
    }));
    function value() {
      return _value2.apply(this, arguments);
    }
    return value;
  }();
  return VoidApiResponse;
}();

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the CreateBasicUserRequest interface.
 */
function instanceOfCreateBasicUserRequest(value) {
  var isInstance = true;
  isInstance = isInstance && "email" in value;
  isInstance = isInstance && "password" in value;
  return isInstance;
}
function CreateBasicUserRequestFromJSON(json) {
  return CreateBasicUserRequestFromJSONTyped(json);
}
function CreateBasicUserRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'email': json['email'],
    'password': json['password'],
    'name': !exists(json, 'name') ? undefined : json['name'],
    'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],
    'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],
    'picture': !exists(json, 'picture') ? undefined : json['picture'],
    'newTenantName': !exists(json, 'newTenantName') ? undefined : json['newTenantName']
  };
}
function CreateBasicUserRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'email': value.email,
    'password': value.password,
    'name': value.name,
    'givenName': value.givenName,
    'familyName': value.familyName,
    'picture': value.picture,
    'newTenantName': value.newTenantName
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the CreateTenantRequest interface.
 */
function instanceOfCreateTenantRequest(value) {
  var isInstance = true;
  isInstance = isInstance && "name" in value;
  return isInstance;
}
function CreateTenantRequestFromJSON(json) {
  return CreateTenantRequestFromJSONTyped(json);
}
function CreateTenantRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'name': json['name'],
    'id': !exists(json, 'id') ? undefined : json['id']
  };
}
function CreateTenantRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'name': value.name,
    'id': value.id
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the Tenant interface.
 */
function instanceOfTenant(value) {
  var isInstance = true;
  isInstance = isInstance && "id" in value;
  return isInstance;
}
function TenantFromJSON(json) {
  return TenantFromJSONTyped(json);
}
function TenantFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'id': json['id'],
    'name': !exists(json, 'name') ? undefined : json['name']
  };
}
function TenantToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'id': value.id,
    'name': value.name
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the TenantUser interface.
 */
function instanceOfTenantUser(value) {
  var isInstance = true;
  return isInstance;
}
function TenantUserFromJSON(json) {
  return TenantUserFromJSONTyped(json);
}
function TenantUserFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'id': !exists(json, 'id') ? undefined : json['id'],
    'email': !exists(json, 'email') ? undefined : json['email'],
    'name': !exists(json, 'name') ? undefined : json['name'],
    'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],
    'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],
    'picture': !exists(json, 'picture') ? undefined : json['picture'],
    'created': !exists(json, 'created') ? undefined : new Date(json['created']),
    'updated': !exists(json, 'updated') ? undefined : new Date(json['updated'])
  };
}
function TenantUserToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'id': value.id,
    'email': value.email,
    'name': value.name,
    'givenName': value.givenName,
    'familyName': value.familyName,
    'picture': value.picture,
    'created': value.created === undefined ? undefined : value.created.toISOString(),
    'updated': value.updated === undefined ? undefined : value.updated.toISOString()
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the UpdateUserRequest interface.
 */
function instanceOfUpdateUserRequest(value) {
  var isInstance = true;
  return isInstance;
}
function UpdateUserRequestFromJSON(json) {
  return UpdateUserRequestFromJSONTyped(json);
}
function UpdateUserRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'name': !exists(json, 'name') ? undefined : json['name'],
    'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],
    'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],
    'picture': !exists(json, 'picture') ? undefined : json['picture']
  };
}
function UpdateUserRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'name': value.name,
    'givenName': value.givenName,
    'familyName': value.familyName,
    'picture': value.picture
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * Niledatabase regional APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the User interface.
 */
function instanceOfUser(value) {
  var isInstance = true;
  return isInstance;
}
function UserFromJSON(json) {
  return UserFromJSONTyped(json);
}
function UserFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    'id': !exists(json, 'id') ? undefined : json['id'],
    'tenants': !exists(json, 'tenants') ? undefined : json['tenants'],
    'email': !exists(json, 'email') ? undefined : json['email'],
    'name': !exists(json, 'name') ? undefined : json['name'],
    'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],
    'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],
    'picture': !exists(json, 'picture') ? undefined : json['picture'],
    'created': !exists(json, 'created') ? undefined : new Date(json['created']),
    'updated': !exists(json, 'updated') ? undefined : new Date(json['updated'])
  };
}
function UserToJSON(value) {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    'id': value.id,
    'tenants': value.tenants === undefined ? undefined : Array.from(value.tenants),
    'email': value.email,
    'name': value.name,
    'givenName': value.givenName,
    'familyName': value.familyName,
    'picture': value.picture,
    'created': value.created === undefined ? undefined : value.created.toISOString(),
    'updated': value.updated === undefined ? undefined : value.updated.toISOString()
  };
}

/**
 *
 */
var AuthenticationApi = /*#__PURE__*/function (_runtime$BaseAPI) {
  function AuthenticationApi() {
    return _runtime$BaseAPI.apply(this, arguments) || this;
  }
  _inheritsLoose(AuthenticationApi, _runtime$BaseAPI);
  var _proto = AuthenticationApi.prototype;
  /**
   * Returns information about the users within the tenant provided
   * lists users in the tenant
   */
  _proto.signin =
  /*#__PURE__*/
  function () {
    var _signin = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling signin.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context.next = 8;
            return this.request({
              path: "/api/auth/signin".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))),
              method: 'GET',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 8:
            response = _context.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return UserFromJSON(jsonValue);
            });
            _context.next = 15;
            return request.value();
          case 15:
            return _context.abrupt("return", _context.sent);
          case 16:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function signin(_x, _x2) {
      return _signin.apply(this, arguments);
    }
    return signin;
  }();
  return AuthenticationApi;
}(BaseAPI);

/**
 *
 */
var DefaultApi = /*#__PURE__*/function (_runtime$BaseAPI) {
  function DefaultApi() {
    return _runtime$BaseAPI.apply(this, arguments) || this;
  }
  _inheritsLoose(DefaultApi, _runtime$BaseAPI);
  var _proto = DefaultApi.prototype;
  /**
   * Returns information about the principal associated with the session provided
   * Identify the principal
   */
  _proto.me =
  /*#__PURE__*/
  function () {
    var _me = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context.next = 6;
            return this.request({
              path: "/api/me",
              method: 'GET',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 6:
            response = _context.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return UserFromJSON(jsonValue);
            });
            _context.next = 13;
            return request.value();
          case 13:
            return _context.abrupt("return", _context.sent);
          case 14:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function me(_x) {
      return _me.apply(this, arguments);
    }
    return me;
  }();
  return DefaultApi;
}(BaseAPI);

/**
 *
 */
var TenantsApi = /*#__PURE__*/function (_runtime$BaseAPI) {
  function TenantsApi() {
    return _runtime$BaseAPI.apply(this, arguments) || this;
  }
  _inheritsLoose(TenantsApi, _runtime$BaseAPI);
  var _proto = TenantsApi.prototype;
  /**
   * Creates a new tenant in a database.
   * Create a tenant
   */
  _proto.createTenant =
  /*#__PURE__*/
  function () {
    var _createTenant = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            headerParameters['Content-Type'] = 'application/json';
            _context.next = 7;
            return this.request({
              path: "/api/tenants",
              method: 'POST',
              headers: headerParameters,
              query: queryParameters,
              body: CreateTenantRequestToJSON(requestParameters.createTenantRequest)
            }, initOverrides);
          case 7:
            response = _context.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return TenantFromJSON(jsonValue);
            });
            _context.next = 14;
            return request.value();
          case 14:
            return _context.abrupt("return", _context.sent);
          case 15:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function createTenant(_x, _x2) {
      return _createTenant.apply(this, arguments);
    }
    return createTenant;
  }()
  /**
   * Deletes a tenant.
   */
  ;
  _proto.deleteTenant =
  /*#__PURE__*/
  function () {
    var _deleteTenant = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context2.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling deleteTenant.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context2.next = 8;
            return this.request({
              path: "/api/tenants/{tenantId}".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))),
              method: 'DELETE',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 8:
            response = _context2.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new VoidApiResponse(response);
            _context2.next = 15;
            return request.value();
          case 15:
            return _context2.abrupt("return", _context2.sent);
          case 16:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function deleteTenant(_x3, _x4) {
      return _deleteTenant.apply(this, arguments);
    }
    return deleteTenant;
  }()
  /**
   * Obtains a specific tenant.
   */
  ;
  _proto.getTenant =
  /*#__PURE__*/
  function () {
    var _getTenant = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context3.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling getTenant.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context3.next = 8;
            return this.request({
              path: "/api/tenants/{tenantId}".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))),
              method: 'GET',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 8:
            response = _context3.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new VoidApiResponse(response);
            _context3.next = 15;
            return request.value();
          case 15:
            return _context3.abrupt("return", _context3.sent);
          case 16:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function getTenant(_x5, _x6) {
      return _getTenant.apply(this, arguments);
    }
    return getTenant;
  }()
  /**
   * associates an existing user with the tenant
   */
  ;
  _proto.linkUser =
  /*#__PURE__*/
  function () {
    var _linkUser = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context4.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling linkUser.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            headerParameters['Content-Type'] = 'application/json';
            _context4.next = 9;
            return this.request({
              path: "/api/tenants/{tenantId}/users".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))),
              method: 'PUT',
              headers: headerParameters,
              query: queryParameters,
              body: AssociateUserRequestToJSON(requestParameters.associateUserRequest)
            }, initOverrides);
          case 9:
            response = _context4.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new VoidApiResponse(response);
            _context4.next = 16;
            return request.value();
          case 16:
            return _context4.abrupt("return", _context4.sent);
          case 17:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function linkUser(_x7, _x8) {
      return _linkUser.apply(this, arguments);
    }
    return linkUser;
  }()
  /**
   * Creates a user in the database
   * list tenants by user
   */
  ;
  _proto.listTenants =
  /*#__PURE__*/
  function () {
    var _listTenants = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context5.next = 6;
            return this.request({
              path: "/api/tenants",
              method: 'GET',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 6:
            response = _context5.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return jsonValue.map(TenantFromJSON);
            });
            _context5.next = 13;
            return request.value();
          case 13:
            return _context5.abrupt("return", _context5.sent);
          case 14:
          case "end":
            return _context5.stop();
        }
      }, _callee5, this);
    }));
    function listTenants(_x9) {
      return _listTenants.apply(this, arguments);
    }
    return listTenants;
  }()
  /**
   * removes an associated user from a specified tenant.
   * removes a user from a tenant
   */
  ;
  _proto.unlinkUser =
  /*#__PURE__*/
  function () {
    var _unlinkUser = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context6.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling unlinkUser.');
          case 2:
            if (!(requestParameters.email === null || requestParameters.email === undefined)) {
              _context6.next = 4;
              break;
            }
            throw new RequiredError('email', 'Required parameter requestParameters.email was null or undefined when calling unlinkUser.');
          case 4:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context6.next = 10;
            return this.request({
              path: "/api/tenants/{tenantId}/users/{email}".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))).replace("{" + "email" + "}", encodeURIComponent(String(requestParameters.email))),
              method: 'DELETE',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 10:
            response = _context6.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new VoidApiResponse(response);
            _context6.next = 17;
            return request.value();
          case 17:
            return _context6.abrupt("return", _context6.sent);
          case 18:
          case "end":
            return _context6.stop();
        }
      }, _callee6, this);
    }));
    function unlinkUser(_x10, _x11) {
      return _unlinkUser.apply(this, arguments);
    }
    return unlinkUser;
  }()
  /**
   * Obtains a specific tenant.
   */
  ;
  _proto.updateTenant =
  /*#__PURE__*/
  function () {
    var _updateTenant = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context7.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling updateTenant.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context7.next = 8;
            return this.request({
              path: "/api/tenants/{tenantId}".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))),
              method: 'PUT',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 8:
            response = _context7.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return TenantFromJSON(jsonValue);
            });
            _context7.next = 15;
            return request.value();
          case 15:
            return _context7.abrupt("return", _context7.sent);
          case 16:
          case "end":
            return _context7.stop();
        }
      }, _callee7, this);
    }));
    function updateTenant(_x12, _x13) {
      return _updateTenant.apply(this, arguments);
    }
    return updateTenant;
  }();
  return TenantsApi;
}(BaseAPI);

/**
 *
 */
var UsersApi = /*#__PURE__*/function (_runtime$BaseAPI) {
  function UsersApi() {
    return _runtime$BaseAPI.apply(this, arguments) || this;
  }
  _inheritsLoose(UsersApi, _runtime$BaseAPI);
  var _proto = UsersApi.prototype;
  /**
   * Creates a new user and associates that user with the specified tenant.
   * Create a user in a tenant
   */
  _proto.createTenantUser =
  /*#__PURE__*/
  function () {
    var _createTenantUser = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling createTenantUser.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            headerParameters['Content-Type'] = 'application/json';
            _context.next = 9;
            return this.request({
              path: "/api/tenants/{tenantId}/users".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))),
              method: 'POST',
              headers: headerParameters,
              query: queryParameters,
              body: CreateBasicUserRequestToJSON(requestParameters.createBasicUserRequest)
            }, initOverrides);
          case 9:
            response = _context.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return UserFromJSON(jsonValue);
            });
            _context.next = 16;
            return request.value();
          case 16:
            return _context.abrupt("return", _context.sent);
          case 17:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
    function createTenantUser(_x, _x2) {
      return _createTenantUser.apply(this, arguments);
    }
    return createTenantUser;
  }()
  /**
   * Creates a user in the database
   * Creates a user
   */
  ;
  _proto.createUser =
  /*#__PURE__*/
  function () {
    var _createUser = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            queryParameters = {};
            if (requestParameters.tenantId !== undefined) {
              queryParameters['tenantId'] = requestParameters.tenantId;
            }
            if (requestParameters.newTenantName !== undefined) {
              queryParameters['newTenantName'] = requestParameters.newTenantName;
            }
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            headerParameters['Content-Type'] = 'application/json';
            _context2.next = 9;
            return this.request({
              path: "/api/users",
              method: 'POST',
              headers: headerParameters,
              query: queryParameters,
              body: CreateBasicUserRequestToJSON(requestParameters.createBasicUserRequest)
            }, initOverrides);
          case 9:
            response = _context2.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return UserFromJSON(jsonValue);
            });
            _context2.next = 16;
            return request.value();
          case 16:
            return _context2.abrupt("return", _context2.sent);
          case 17:
          case "end":
            return _context2.stop();
        }
      }, _callee2, this);
    }));
    function createUser(_x3, _x4) {
      return _createUser.apply(this, arguments);
    }
    return createUser;
  }()
  /**
   * Lists users that are associated with the specified tenant.
   * List tenant users
   */
  ;
  _proto.listTenantUsers =
  /*#__PURE__*/
  function () {
    var _listTenantUsers = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            if (!(requestParameters.tenantId === null || requestParameters.tenantId === undefined)) {
              _context3.next = 2;
              break;
            }
            throw new RequiredError('tenantId', 'Required parameter requestParameters.tenantId was null or undefined when calling listTenantUsers.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context3.next = 8;
            return this.request({
              path: "/api/tenants/{tenantId}/users".replace("{" + "tenantId" + "}", encodeURIComponent(String(requestParameters.tenantId))),
              method: 'GET',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 8:
            response = _context3.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return jsonValue.map(UserFromJSON);
            });
            _context3.next = 15;
            return request.value();
          case 15:
            return _context3.abrupt("return", _context3.sent);
          case 16:
          case "end":
            return _context3.stop();
        }
      }, _callee3, this);
    }));
    function listTenantUsers(_x5, _x6) {
      return _listTenantUsers.apply(this, arguments);
    }
    return listTenantUsers;
  }()
  /**
   * Returns information about the users within the tenant provided. You can also pass the a `nile.tenant_id` in the header or in a cookie.
   * lists users in the tenant
   */
  ;
  _proto.listUsers =
  /*#__PURE__*/
  function () {
    var _listUsers = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            queryParameters = {};
            if (requestParameters.tenantId !== undefined) {
              queryParameters['tenantId'] = requestParameters.tenantId;
            }
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            _context4.next = 7;
            return this.request({
              path: "/api/users",
              method: 'GET',
              headers: headerParameters,
              query: queryParameters
            }, initOverrides);
          case 7:
            response = _context4.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return jsonValue.map(TenantUserFromJSON);
            });
            _context4.next = 14;
            return request.value();
          case 14:
            return _context4.abrupt("return", _context4.sent);
          case 15:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function listUsers(_x7, _x8) {
      return _listUsers.apply(this, arguments);
    }
    return listUsers;
  }()
  /**
   * signs a user up and logs them in. Expects a email and password combo
   * signs a user up
   */
  ;
  _proto.signUp =
  /*#__PURE__*/
  function () {
    var _signUp = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            queryParameters = {};
            if (requestParameters.tenantId !== undefined) {
              queryParameters['tenantId'] = requestParameters.tenantId;
            }
            if (requestParameters.newTenantName !== undefined) {
              queryParameters['newTenantName'] = requestParameters.newTenantName;
            }
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            headerParameters['Content-Type'] = 'application/json';
            _context5.next = 9;
            return this.request({
              path: "/api/signup",
              method: 'POST',
              headers: headerParameters,
              query: queryParameters,
              body: CreateBasicUserRequestToJSON(requestParameters.createBasicUserRequest)
            }, initOverrides);
          case 9:
            response = _context5.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return UserFromJSON(jsonValue);
            });
            _context5.next = 16;
            return request.value();
          case 16:
            return _context5.abrupt("return", _context5.sent);
          case 17:
          case "end":
            return _context5.stop();
        }
      }, _callee5, this);
    }));
    function signUp(_x9, _x10) {
      return _signUp.apply(this, arguments);
    }
    return signUp;
  }()
  /**
   * updates a user within the tenant
   * update a user
   */
  ;
  _proto.updateUser =
  /*#__PURE__*/
  function () {
    var _updateUser = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(requestParameters, initOverrides) {
      var queryParameters, headerParameters, requestTenantId, response, headers, responseTenantId, request;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            if (!(requestParameters.userid === null || requestParameters.userid === undefined)) {
              _context6.next = 2;
              break;
            }
            throw new RequiredError('userid', 'Required parameter requestParameters.userid was null or undefined when calling updateUser.');
          case 2:
            queryParameters = {};
            headerParameters = {};
            requestTenantId = localStorage.getItem('tenantId');
            if (requestTenantId) {
              headerParameters['nile.tenant_id'] = requestTenantId;
            }
            headerParameters['Content-Type'] = 'application/json';
            _context6.next = 9;
            return this.request({
              path: "/api/users/{userid}".replace("{" + "userid" + "}", encodeURIComponent(String(requestParameters.userid))),
              method: 'PUT',
              headers: headerParameters,
              query: queryParameters,
              body: UpdateUserRequestToJSON(requestParameters.updateUserRequest)
            }, initOverrides);
          case 9:
            response = _context6.sent;
            headers = new Headers(response.headers);
            responseTenantId = headers.get('nile.tenant_id');
            if (responseTenantId) {
              localStorage.setItem('tenantId', responseTenantId);
            }
            request = new JSONApiResponse(response, function (jsonValue) {
              return UserFromJSON(jsonValue);
            });
            _context6.next = 16;
            return request.value();
          case 16:
            return _context6.abrupt("return", _context6.sent);
          case 17:
          case "end":
            return _context6.stop();
        }
      }, _callee6, this);
    }));
    function updateUser(_x11, _x12) {
      return _updateUser.apply(this, arguments);
    }
    return updateUser;
  }();
  return UsersApi;
}(BaseAPI);

var Browser = /*#__PURE__*/function (_BaseAPI) {
  function Browser(params) {
    var _this;
    _this = _BaseAPI.call(this) || this;
    _this.auth = void 0;
    _this.users = void 0;
    _this.tenants = void 0;
    _this.me = void 0;
    var config = new Configuration(params);
    _this.configuration = config;
    _this.auth = new AuthenticationApi(config);
    _this.tenants = new TenantsApi(config);
    _this.users = new UsersApi(config);
    var _DefaultApi = new DefaultApi(config),
      me = _DefaultApi.me;
    _this.me = me;
    return _this;
  }
  _inheritsLoose(Browser, _BaseAPI);
  return Browser;
}(BaseAPI);

export { APIErrorErrorCodeEnum, APIErrorFromJSON, APIErrorFromJSONTyped, APIErrorToJSON, AssociateUserRequestFromJSON, AssociateUserRequestFromJSONTyped, AssociateUserRequestToJSON, AuthenticationApi, CreateBasicUserRequestFromJSON, CreateBasicUserRequestFromJSONTyped, CreateBasicUserRequestToJSON, CreateTenantRequestFromJSON, CreateTenantRequestFromJSONTyped, CreateTenantRequestToJSON, DefaultApi, TenantFromJSON, TenantFromJSONTyped, TenantToJSON, TenantUserFromJSON, TenantUserFromJSONTyped, TenantUserToJSON, TenantsApi, UpdateUserRequestFromJSON, UpdateUserRequestFromJSONTyped, UpdateUserRequestToJSON, UserFromJSON, UserFromJSONTyped, UserToJSON, UsersApi, Browser as default, instanceOfAPIError, instanceOfAssociateUserRequest, instanceOfCreateBasicUserRequest, instanceOfCreateTenantRequest, instanceOfTenant, instanceOfTenantUser, instanceOfUpdateUserRequest, instanceOfUser };
//# sourceMappingURL=browser.esm.js.map
